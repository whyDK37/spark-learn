<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>me.spark</groupId>
    <artifactId>spark-learn</artifactId>
    <version>1.0-SNAPSHOT</version>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <spark.version>1.6.0</spark.version>
        <akka.group>com.typesafe.akka</akka.group>
        <akka.version>2.3.11</akka.version>
        <java.version>1.7</java.version>
        <maven.version>3.3.3</maven.version>
        <sbt.project.name>spark</sbt.project.name>
        <mesos.version>0.21.1</mesos.version>
        <mesos.classifier>shaded-protobuf</mesos.classifier>
        <slf4j.version>1.7.10</slf4j.version>
        <log4j.version>1.2.17</log4j.version>
        <hadoop.version>2.6.0</hadoop.version>
        <protobuf.version>2.5.0</protobuf.version>
        <yarn.version>${hadoop.version}</yarn.version>
        <hbase.version>0.98.7-hadoop2</hbase.version>
        <hbase.artifact>hbase</hbase.artifact>
        <flume.version>1.6.0</flume.version>
        <zookeeper.version>3.4.5</zookeeper.version>
        <curator.version>2.4.0</curator.version>
        <hive.group>org.spark-project.hive</hive.group>
        <!-- Version used in Maven Hive dependency -->
        <hive.version>1.2.1.spark</hive.version>
        <!-- Version used for internal directory structure -->
        <hive.version.short>1.2.1</hive.version.short>
        <derby.version>10.10.1.1</derby.version>
        <parquet.version>1.7.0</parquet.version>
        <hive.parquet.version>1.6.0</hive.parquet.version>
        <jblas.version>1.2.4</jblas.version>
        <jetty.version>8.1.14.v20131031</jetty.version>
        <orbit.version>3.0.0.v201112011016</orbit.version>
        <chill.version>0.5.0</chill.version>
        <ivy.version>2.4.0</ivy.version>
        <oro.version>2.0.8</oro.version>
        <codahale.metrics.version>3.1.2</codahale.metrics.version>
        <avro.version>1.7.7</avro.version>
        <avro.mapred.classifier>hadoop2</avro.mapred.classifier>
        <jets3t.version>0.7.1</jets3t.version>
        <aws.kinesis.client.version>1.6.1</aws.kinesis.client.version>
        <!-- the producer is used in tests -->
        <aws.kinesis.producer.version>0.10.2</aws.kinesis.producer.version>
        <!-- org.apache.httpcomponents/httpclient -->
        <commons.httpclient.version>4.3.2</commons.httpclient.version>
        <!-- commons-httpclient/commons-httpclient -->
        <httpclient.classic.version>3.1</httpclient.classic.version>
        <commons.math3.version>3.4.1</commons.math3.version>
        <!-- managed up from 3.2.1 for SPARK-11652 -->
        <commons.collections.version>3.2.2</commons.collections.version>
        <scala.version>2.10.5</scala.version>
        <scala.binary.version>2.10</scala.binary.version>
        <jline.version>${scala.version}</jline.version>
        <jline.groupid>org.scala-lang</jline.groupid>
        <codehaus.jackson.version>1.9.13</codehaus.jackson.version>
        <fasterxml.jackson.version>2.5.3</fasterxml.jackson.version>
        <snappy.version>1.1.2</snappy.version>
        <netlib.java.version>1.1.2</netlib.java.version>
        <calcite.version>1.2.0-incubating</calcite.version>
        <commons-codec.version>1.10</commons-codec.version>
        <!-- org.apache.commons/commons-lang/ -->
        <commons-lang2.version>2.6</commons-lang2.version>
        <!-- org.apache.commons/commons-lang3/ -->
        <commons-lang3.version>3.3.2</commons-lang3.version>
        <datanucleus-core.version>3.2.10</datanucleus-core.version>
        <janino.version>2.7.8</janino.version>
        <jersey.version>1.9</jersey.version>
        <joda.version>2.9</joda.version>
        <jodd.version>3.5.2</jodd.version>
        <jsr305.version>1.3.9</jsr305.version>
        <libthrift.version>0.9.2</libthrift.version>
        <antlr.version>3.5.2</antlr.version>

        <test.java.home>${java.home}</test.java.home>
        <test.exclude.tags></test.exclude.tags>

        <!-- Dependency scopes that can be overridden by enabling certain profiles. These profiles are declared in the projects that build assemblies. For other projects the scope should
            remain as "compile", otherwise they are not available during compilation if the dependency is transivite (e.g. "graphx/" depending on "core/" and needing Hadoop classes in the classpath
            to compile). -->
        <flume.deps.scope>compile</flume.deps.scope>
        <hadoop.deps.scope>compile</hadoop.deps.scope>
        <hbase.deps.scope>compile</hbase.deps.scope>
        <hive.deps.scope>compile</hive.deps.scope>
        <parquet.deps.scope>compile</parquet.deps.scope>
        <parquet.test.deps.scope>test</parquet.test.deps.scope>

        <PermGen>64m</PermGen>
        <MaxPermGen>512m</MaxPermGen>
        <CodeCacheSize>512m</CodeCacheSize>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_2.12</artifactId>
            <version>2.4.4</version>
        </dependency>


    </dependencies>

</project>